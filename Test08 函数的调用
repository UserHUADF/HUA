数组作为函数传参的时候：
形参可以写成两种形式：
1.指针形式
2.数组形式
int arr[10];
char[3][5];
test1(arr);
//形参数组
void test1(int arr[10])
{}
void test1(int arr[])
{}
//以上两种形式都可以(写不写10都可以)
//形参是指针的形式
void test(int *arr)

test2(ch);//调用
//形参是数组  
//形参也可以是指针 暂时不考虑
void test2(char arr[3][5])
{}
void test2(char arr[][5])//3可省略5不可省略

//函数的调用：
//分为传值调用与传址调用
//传值：例如Swap(a,b)
//传值调用 函数的形参与实参分别占有不同的内存块 对形参的修改不会影响实参
//传址：例如Swap(&a,&b)
//传址调用 是把函数外部创建变量的内存地址传递给函数参数的一种调用函数的方式
//这种传参方式 可以让函数和函数外边的变量建立起真正的联系 也就是函数内部的可以直接操作函数外部的变量




#include<stdio.h>



//int is_prime(int i)
//{
//	int a=0;
//	for(a=2;a<i;a++)
//	{
//		if((i%a)==0)
//		{
//			return 0;
//			break;
//		}
//
//	}
//
//	return 1;
//}
//
//
//
//int main()
//{
//	int i=0;
//	for(i=2;i<=100;i++)
//	{
//		if(is_prime(i)==1)
//		{
//			printf("%d ",i);
//		}
//	}
//}
